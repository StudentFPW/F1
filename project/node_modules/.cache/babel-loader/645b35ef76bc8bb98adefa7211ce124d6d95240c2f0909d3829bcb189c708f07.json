{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jofel\\\\Documents\\\\Git\\\\F1\\\\project\\\\src\\\\components\\\\WeekWeatherScraper.js\";\nimport React, { useEffect } from 'react';\n// import axios from 'axios';\n\n// import { token2 } from '../token';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeekWeatherScraper(props) {\n  // const [weather, setWeather] = React.useState([]);\n\n  console.log(props.coord.lon);\n  console.log(props.coord.lon);\n\n  // const url = `https://api.openweathermap.org/data/2.5/weather?lat=${props.coord.lat}&lon=${props.coord.lon}&appid=${token2}&units=metric&lang=ru`;\n\n  // useEffect(() => {\n  //     axios.get(url)\n  //         .then(response => {\n  //             // setWeather(response.data);\n  //             console.log(response.data);\n  //         })\n  //         .catch(error => { console.log(error) })\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = WeekWeatherScraper;\nvar _c;\n$RefreshReg$(_c, \"WeekWeatherScraper\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","WeekWeatherScraper","props","console","log","coord","lon","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jofel/Documents/Git/F1/project/src/components/WeekWeatherScraper.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// import { token2 } from '../token';\r\n\r\nexport default function WeekWeatherScraper(props) {\r\n    // const [weather, setWeather] = React.useState([]);\r\n\r\n    console.log(props.coord.lon)\r\n    console.log(props.coord.lon)\r\n\r\n    // const url = `https://api.openweathermap.org/data/2.5/weather?lat=${props.coord.lat}&lon=${props.coord.lon}&appid=${token2}&units=metric&lang=ru`;\r\n\r\n    // useEffect(() => {\r\n    //     axios.get(url)\r\n    //         .then(response => {\r\n    //             // setWeather(response.data);\r\n    //             console.log(response.data);\r\n    //         })\r\n    //         .catch(error => { console.log(error) })\r\n    // }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* <h1>Город: {weather.name}</h1>\r\n            {weather.main ? <p>Температура: {weather.main.temp.toFixed()} °C</p> : null}\r\n            {weather.weather ? <p>Небо: {weather.weather[0].description}</p> : null}\r\n            {weather.main ? <p>Как будто: {weather.main.feels_like.toFixed()} °C</p> : null}\r\n            {weather.main ? <p>Влажность: {weather.main.humidity} %</p> : null}\r\n            {weather.wind ? <p>Скорость ветра: {weather.wind.speed.toFixed()} MPH</p> : null}\r\n            {weather.coord ? <p>Координаты: Широта: {weather.coord.lat} Долгота: {weather.coord.lon}</p> : null} */}\r\n            <h1>Weather</h1>\r\n        </React.Fragment>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAC9C;;EAEAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,KAAK,CAACC,GAAG,CAAC;EAC5BH,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,KAAK,CAACC,GAAG,CAAC;;EAE5B;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIN,OAAA,CAACH,KAAK,CAACU,QAAQ;IAAAC,QAAA,eAQXR,OAAA;MAAAQ,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEzB;AAACC,EAAA,GA7BuBZ,kBAAkB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}