{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jofel\\\\Documents\\\\Git\\\\F1\\\\project\\\\src\\\\components\\\\OpenWeatherScraper.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { token1 } from '../token';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lat = 34.761051;\nconst lon = 32.452110;\nexport default function OpenWeatherScraper() {\n  _s();\n  const [weather, setWeather] = React.useState([]);\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&appid=${token1}`).then(response => {\n      const weather_response = response.data;\n      console.log(weather_response);\n      // setWeather({ weather_response });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"OpenWeatherScraper\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(OpenWeatherScraper, \"Mos131Hxz3VSc+jVtInwzSzjUQ4=\");\n_c = OpenWeatherScraper;\nvar _c;\n$RefreshReg$(_c, \"OpenWeatherScraper\");","map":{"version":3,"names":["React","useEffect","axios","token1","jsxDEV","_jsxDEV","lat","lon","OpenWeatherScraper","_s","weather","setWeather","useState","get","then","response","weather_response","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jofel/Documents/Git/F1/project/src/components/OpenWeatherScraper.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { token1 } from '../token';\r\n\r\nconst lat = 34.761051;\r\nconst lon = 32.452110;\r\n\r\nexport default function OpenWeatherScraper() {\r\n    const [weather, setWeather] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&appid=${token1}`)\r\n            .then(response => {\r\n                const weather_response = response.data;\r\n                console.log(weather_response);\r\n                // setWeather({ weather_response });\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <h1>OpenWeatherScraper</h1>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,GAAG,GAAG,SAAS;AACrB,MAAMC,GAAG,GAAG,SAAS;AAErB,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAEhDX,SAAS,CAAC,MAAM;IACZC,KAAK,CAACW,GAAG,CAAE,uDAAsDP,GAAI,QAAOC,GAAI,UAASJ,MAAO,EAAC,CAAC,CAC7FW,IAAI,CAACC,QAAQ,IAAI;MACd,MAAMC,gBAAgB,GAAGD,QAAQ,CAACE,IAAI;MACtCC,OAAO,CAACC,GAAG,CAACH,gBAAgB,CAAC;MAC7B;IACJ,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAAe,QAAA,EAAI;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAEnC;AAACf,EAAA,CAfuBD,kBAAkB;AAAAiB,EAAA,GAAlBjB,kBAAkB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}