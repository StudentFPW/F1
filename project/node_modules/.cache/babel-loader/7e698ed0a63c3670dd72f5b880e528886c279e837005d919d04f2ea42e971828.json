{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import axios from 'axios';\n\n// import { token1 } from '../token';\n\n// export default function TodayWeatherScraper(props) {\n//     const [todayweather, setTodayWeather] = React.useState([]);\n\n//     const latitude = props.coord.lat\n//     const longitude = props.coord.lon\n\n//     // console.log(\"latitude: \" + latitude, \"longitude: \" + longitude);\n\n//     const url = `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${token1}&cnt=12&units=metric&lang=ru`;\n\n//     useEffect(() => {\n//         axios.get(url)\n//             .then(response => {\n//                 setTodayWeather(response.data.list);\n//                 // console.log(response.data.list);\n//             })\n//             .catch(error => { console.log(error) })\n//     }, []);\n\n//     // console.log(todayweather);\n\n//     return (\n//         <React.Fragment>\n//             <h1>Следующий 12 часов</h1>\n//             {todayweather ? todayweather.map(\n//                 (weather, index) => (\n//                     <p key={index}>\n//                         Дата и Время: {weather.dt_txt} <br />\n//                         Температура: {weather.main.temp} °C<br />\n//                         Небо: {weather.weather[0].description} <br />\n//                         Как будто: {weather.main.feels_like} °C<br />\n//                         Влажность: {weather.main.humidity} % <br />\n//                         Скорость ветра: {weather.wind.speed} MPH <br /><br />\n//                     </p>\n//                 )\n//             ) : null}\n//         </React.Fragment>\n//     )\n// }","map":{"version":3,"names":[],"sources":["C:/Users/jofel/Documents/Git/F1/project/src/components/TodayWeatherScraper.js"],"sourcesContent":["// import React, { useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// import { token1 } from '../token';\r\n\r\n// export default function TodayWeatherScraper(props) {\r\n//     const [todayweather, setTodayWeather] = React.useState([]);\r\n\r\n//     const latitude = props.coord.lat\r\n//     const longitude = props.coord.lon\r\n\r\n//     // console.log(\"latitude: \" + latitude, \"longitude: \" + longitude);\r\n\r\n//     const url = `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${token1}&cnt=12&units=metric&lang=ru`;\r\n\r\n//     useEffect(() => {\r\n//         axios.get(url)\r\n//             .then(response => {\r\n//                 setTodayWeather(response.data.list);\r\n//                 // console.log(response.data.list);\r\n//             })\r\n//             .catch(error => { console.log(error) })\r\n//     }, []);\r\n\r\n//     // console.log(todayweather);\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <h1>Следующий 12 часов</h1>\r\n//             {todayweather ? todayweather.map(\r\n//                 (weather, index) => (\r\n//                     <p key={index}>\r\n//                         Дата и Время: {weather.dt_txt} <br />\r\n//                         Температура: {weather.main.temp} °C<br />\r\n//                         Небо: {weather.weather[0].description} <br />\r\n//                         Как будто: {weather.main.feels_like} °C<br />\r\n//                         Влажность: {weather.main.humidity} % <br />\r\n//                         Скорость ветра: {weather.wind.speed} MPH <br /><br />\r\n//                     </p>\r\n//                 )\r\n//             ) : null}\r\n//         </React.Fragment>\r\n//     )\r\n// }"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}